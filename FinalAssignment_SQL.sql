-- Table for USERS
CREATE TABLE USERS (
    USERID INT PRIMARY KEY,
    USERNAME VARCHAR(64) NOT NULL,
    FULL_NAME VARCHAR(64) NOT NULL,
    BIRTH_DATE DATE NOT NULL,
    EMAIL NVARCHAR(64),
    GENDER_ID VARCHAR(32)
);

-- Table for Passwords
CREATE TABLE PASSWORDS (
    USERID INT,
    USER_PASSWORD VARBINARY(256) NOT NULL,
    PASSWORD_CREATION_DATE DATETIME2 NOT NULL,
    PASSWORD_EXPIRY_DATE DATE NOT NULL,
    PASSWORD_LAST_UPDATED DATETIME2 DEFAULT CURRENT_TIMESTAMP
);

-- Table for Profile Pictures
CREATE TABLE PROFILE_PICTURES (
    USERID INT NOT NULL,
    PIC_URL VARCHAR(255) UNIQUE NOT NULL,
    UPLOAD_DATE DATETIME2 NOT NULL,
    DELETE_DATE DATETIME2,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID)
);

-- Table for Privacy Configurations
CREATE TABLE PRIVACY_CONFIG (
    USERID INT NOT NULL,
    DISPLAY_FULL_NAME BIT NOT NULL,
    AUTO_APPROVE_FOLLOWS BIT NOT NULL,
    PRIVACY_CHANGE_DATE DATETIME2 NOT NULL,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID)
);

-- Table for Videos
CREATE TABLE VIDEOS (
    VIDEO_ID INT PRIMARY KEY,
    USERID INT NOT NULL,
    VID_TITLE VARCHAR(64) NOT NULL,
    VID_URL VARCHAR(255) NOT NULL,
    UPLOAD_DATE DATETIME2 NOT NULL,
    DELETE_DATE DATETIME2,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID)
);

-- Table for Reactions
CREATE TABLE REACTIONS (
    REACTION_ID INT PRIMARY KEY,
    USERID INT NOT NULL,
    VIDEO_ID INT NOT NULL,
    REACTION NVARCHAR(16),
    CREATED_AT DATETIME2 DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT UC_USER_VIDEO_REACTION UNIQUE (USERID, VIDEO_ID),
    FOREIGN KEY (USERID) REFERENCES USERS(USERID),
    FOREIGN KEY (VIDEO_ID) REFERENCES VIDEOS(VIDEO_ID)
);

-- Table for Follow Requests
CREATE TABLE FOLLOW_REQUESTS (
    REQUEST_ID INT PRIMARY KEY,
    FOLLOWER_ID INT,
    FOLLOWEE_ID INT,
    REQUEST_DATE DATE NOT NULL,
    APPROVAL_DATE DATE,
    FOREIGN KEY (FOLLOWER_ID) REFERENCES USERS(USERID),
    FOREIGN KEY (FOLLOWEE_ID) REFERENCES USERS(USERID)
);

-- Table for Comments
CREATE TABLE COMMENTS (
    COMMENT_ID INT PRIMARY KEY,
    USERID INT NOT NULL,
    VIDEO_ID INT NOT NULL,
    COMMENT NVARCHAR(255) NOT NULL,
    COMMENT_TIME DATETIME2 DEFAULT CURRENT_TIMESTAMP NOT NULL,
    PARENT_COMMENT_ID INT,
    FOREIGN KEY (USERID) REFERENCES USERS(USERID),
    FOREIGN KEY (VIDEO_ID) REFERENCES VIDEOS(VIDEO_ID),
    FOREIGN KEY (PARENT_COMMENT_ID) REFERENCES COMMENTS(COMMENT_ID)
);

-- Table for Comment Reactions
CREATE TABLE COMMENT_REACTIONS (
    COMMENT_REACTION_ID INT PRIMARY KEY,
    USERID INT NOT NULL,
    COMMENT_ID INT NOT NULL,
    REACTION NVARCHAR(16),
    FOREIGN KEY (USERID) REFERENCES USERS(USERID),
    FOREIGN KEY (COMMENT_ID) REFERENCES COMMENTS(COMMENT_ID)
);

-- Table for Hashtags
CREATE TABLE HASHTAGS (
    HASHTAG_ID INT PRIMARY KEY NOT NULL,
    HASHTAG VARCHAR(64) NOT NULL
);

-- Table for Video Hashtags
CREATE TABLE VIDEO_HASHTAGS (
    VIDEO_ID INT NOT NULL,
    HASHTAG_ID INT NOT NULL,
    PRIMARY KEY (VIDEO_ID, HASHTAG_ID),
    FOREIGN KEY (VIDEO_ID) REFERENCES VIDEOS(VIDEO_ID),
    FOREIGN KEY (HASHTAG_ID) REFERENCES HASHTAGS(HASHTAG_ID)
);

-- Table for User Hashtags
CREATE TABLE USER_HASHTAGS (
    USERID INT NOT NULL,
    HASHTAG_ID INT NOT NULL,
    PRIMARY KEY (USERID, HASHTAG_ID),
    FOREIGN KEY (USERID) REFERENCES USERS(USERID),
    FOREIGN KEY (HASHTAG_ID) REFERENCES HASHTAGS(HASHTAG_ID)
);

-- Insert key data for demonstration purposes

-- Insert users
INSERT INTO USERS (USERID, USERNAME, FULL_NAME, BIRTH_DATE, EMAIL, GENDER_ID) VALUES
(1, 'user1', 'Bryce_10', '1990-01-01', 'user1@example.com', 'Male'),
(2, 'user2', 'Luther_1', '1995-05-15', 'user2@example.com', 'Female'),
(3, 'user3', 'Kevin10', '1988-11-30', 'user3@example.com', 'Other');

-- Insert passwords
-- Insert passwords with actual hashed values
INSERT INTO PASSWORDS (USERID, USER_PASSWORD, PASSWORD_CREATION_DATE, PASSWORD_EXPIRY_DATE)
VALUES
(1, HASHBYTES('SHA2_512', 'idk' + CAST('unique_salt_for_user1' AS NVARCHAR(64))), '2023-01-01', '2023-07-01'),
(2, HASHBYTES('SHA2_512', 'udk' + CAST('unique_salt_for_user2' AS NVARCHAR(64))), '2023-02-15', '2023-08-15'),
(3, HASHBYTES('SHA2_512', 'wdk' + CAST('unique_salt_for_user3' AS NVARCHAR(64))), '2022-12-01', '2023-06-01');


-- Insert profile pictures
INSERT INTO PROFILE_PICTURES (USERID, PIC_URL, UPLOAD_DATE, DELETE_DATE) VALUES
(1, 'url1', '2023-01-01', NULL),
(2, 'url2', '2023-02-15', '2023-05-01'),
(3, 'url3', '2022-12-01', NULL);

-- Insert privacy configurations
INSERT INTO PRIVACY_CONFIG (USERID, DISPLAY_FULL_NAME, AUTO_APPROVE_FOLLOWS, PRIVACY_CHANGE_DATE) VALUES
(1, 1, 0, '2023-01-01'),
(2, 1, 1, '2023-02-15'),
(3, 0, 0, '2022-12-01');

-- Insert videos
INSERT INTO VIDEOS (VIDEO_ID, USERID, VID_TITLE, VID_URL, UPLOAD_DATE, DELETE_DATE) VALUES
(1, 1, 'Video One', 'video_url1', '2023-01-01', NULL),
(2, 2, 'Video Two', 'video_url2', '2023-02-15', '2023-05-01'),
(3, 3, 'Video Three', 'video_url3', '2022-12-01', NULL);

-- Insert reactions
INSERT INTO REACTIONS (REACTION_ID, USERID, VIDEO_ID, REACTION, CREATED_AT) VALUES
(1, 1, 1, 'üî•', '2023-01-01'),
(2, 2, 2, 'üíØ', '2023-02-15'),
(3, 3, 3, '‚ù§Ô∏è', '2022-12-01');

-- Insert follow requests
INSERT INTO FOLLOW_REQUESTS (REQUEST_ID, FOLLOWER_ID, FOLLOWEE_ID, REQUEST_DATE, APPROVAL_DATE) VALUES
(1, 1, 2, '2023-01-01', '2023-01-02'),
(2, 2, 3, '2023-02-15', '2023-02-17'),
(3, 3, 1, '2022-12-01', '2022-12-03');

-- Insert comments
INSERT INTO COMMENTS (COMMENT_ID, USERID, VIDEO_ID, COMMENT, COMMENT_TIME, PARENT_COMMENT_ID) VALUES
(1, 1, 1, 'Comment One', '2023-01-01', NULL),
(2, 2, 2, 'Comment Two', '2023-02-15', NULL),
(3, 3, 3, 'Comment Three', '2022-12-01', 1);

-- Insert comment reactions
INSERT INTO COMMENT_REACTIONS (COMMENT_REACTION_ID, USERID, COMMENT_ID, REACTION) VALUES
(1, 1, 1, 'üëç'),
(2, 2, 2, '‚ù§Ô∏è'),
(3, 3, 3, 'üíØ');

-- Insert hashtags
INSERT INTO HASHTAGS (HASHTAG_ID, HASHTAG) VALUES
(1, '#1337lyfe'),
(2, '#dadjoke'),
(3, '#tag3');

-- Insert video hashtags
INSERT INTO VIDEO_HASHTAGS (VIDEO_ID, HASHTAG_ID) VALUES
(1, 1),
(2, 2),
(3, 3);

-- Insert user hashtags
INSERT INTO USER_HASHTAGS (USERID, HASHTAG_ID) VALUES
(1, 1),
(2, 2),
(3, 3);


